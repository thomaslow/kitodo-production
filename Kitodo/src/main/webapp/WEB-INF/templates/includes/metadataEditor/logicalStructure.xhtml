<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">
    <p:outputPanel id="logicalStructureHeader">
        <p:selectOneMenu styleClass="logicalStructureTitle" value="#{DataEditorForm.structurePanel.titleMetadata}" style="width: 90%">
            <f:selectItem itemLabel="#{msgs.typ}" itemValue="type"/>
            <f:selectItems value="#{DataEditorForm.structurePanel.getTitleMetadataItems()}"/>
            <p:ajax event="change" update="@(.ui-tree, .stripe)"/>
        </p:selectOneMenu>
        <p:outputPanel styleClass="logicalStructureMenuWrapper">
            <p:commandButton id="logicalStructureMenuButton" type="button" icon="fa fa-ellipsis-v"/>
        </p:outputPanel>
    </p:outputPanel>
    <div class="scroll-up-area"></div>
    <div class="scroll-wrapper">
        <p:tree id="logicalTree"
                value="#{DataEditorForm.structurePanel.logicalTree}"
                var="logicalNode"
                styleClass="focusable"
                selectionMode="single"
                selection="#{DataEditorForm.structurePanel.selectedLogicalNode}"
                draggable="#{not readOnly and SecurityAccessController.hasAuthorityToEditProcessStructureData()}"
                droppable="#{not readOnly and SecurityAccessController.hasAuthorityToEditProcessStructureData()}"
                dragdropScope="logicalTree"
                onNodeClick="metadataEditor.logicalTree.onNodeClick(node,event)">
            <p:ajax event="select"
                    listener="#{DataEditorForm.structurePanel.treeLogicalSelect}"
                    oncomplete="scrollToSelectedThumbnail();
                                scrollToSelectedPaginationRow();
                                changeToMapView();
                                expandMetadata('logical-metadata-tab');"
                    update="galleryHeadingWrapper
                            imagePreviewForm:mediaViewData
                            contextMenuLogicalTree
                            imagePreviewForm:stripeContextMenu
                            imagePreviewForm:mediaContextMenu
                            metadataAccordion:logicalMetadataWrapperPanel"/>
            <p:ajax event="contextMenu"
                    listener="#{DataEditorForm.structurePanel.treeLogicalSelect}"
                    onstart="$('#contextMenuLogicalTree .ui-menuitem').addClass('ui-state-disabled')"
                    oncomplete="scrollToSelectedThumbnail();
                                scrollToSelectedPaginationRow();
                                changeToMapView();
                                PF('contextMenuLogicalTree').show(currentEvent)"
                    update="@(.stripe)
                            @(.thumbnail)
                            galleryHeadingWrapper
                            imagePreviewForm:mediaViewData
                            contextMenuLogicalTree
                            physicalTree
                            metadataAccordion:logicalMetadataWrapperPanel"/>
            <p:ajax event="dragdrop"
                    disabled="#{not SecurityAccessController.hasAuthorityToEditProcessStructureData()}"
                    listener="#{DataEditorForm.structurePanel.onDragDrop}"
                    update="logicalTree
                            contextMenuLogicalTree
                            metadataAccordion:logicalMetadataWrapperPanel
                            @(.pageList)
                            paginationForm:paginationWrapperPanel
                            imagePreviewForm:thumbnailStripe
                            imagePreviewForm:mediaContextMenu"/>
            <p:ajax event="collapse"
                    listener="#{DataEditorForm.structurePanel.onNodeCollapse}"/>
            <p:ajax event="expand"
                    listener="#{DataEditorForm.structurePanel.onNodeExpand}"/>
            <p:treeNode expandedIcon="#{logicalNode.dataObject['class'].simpleName eq 'View' ? 'ui-icon-document' : 'ui-icon-folder-expanded'}"
                        collapsedIcon="#{logicalNode.dataObject['class'].simpleName eq 'View' ? 'ui-icon-document' : 'ui-icon-folder-collapsed'}"
                        styleClass="#{logicalNode.linked ? 'linked' : ''} #{logicalNode.undefined ? 'undefined' : ''}">
                <!--@elvariable id="logicalElementType" type="java.lang.String"-->
                <ui:param name="logicalElementType" value="#{logicalNode.label}"/>
                <h:outputText value="#{empty logicalElementType ? msgs['dataEditor.withoutType'] : logicalElementType}"
                              title="#{logicalNode.undefined ? msgs['dataEditor.undefinedStructure'] : ''}"
                              rendered="#{DataEditorForm.structurePanel.titleMetadata eq 'type' or logicalNode.dataObject['class'].simpleName eq 'View'}"/>
                <h:outputText value="#{DataEditorForm.getStructureElementTitle(logicalNode.dataObject)}"
                              rendered="#{DataEditorForm.structurePanel.titleMetadata ne 'type' and logicalNode.dataObject['class'].simpleName ne 'View'}"/>
                <h:outputText value="#{DataEditorForm.structurePanel.getMultipleAssignmentsIndex(logicalNode) + 1}"
                              rendered="#{logicalNode.assignedSeveralTimes}"
                              styleClass="assigned-several-times"/>
                <h:outputText value="[#{logicalNode.pageRange}]"
                              rendered="#{DataEditorForm.structurePanel.showPageRangeInLogicalTree and logicalNode.pageRange ne null}"
                              styleClass="pageRange" />
            </p:treeNode>
        </p:tree>
        <p:contextMenu for="logicalTree" id="contextMenuLogicalTree" widgetVar="contextMenuLogicalTree">
            <p:menuitem value="#{msgs.addElement}"
                        rendered="#{DataEditorForm.selectedMedia.size() lt 1}"
                        icon="fa fa-plus fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        action="#{DataEditorForm.addDocStrucTypeDialog.prepare}"
                        actionListener="#{DataEditorForm.addDocStrucTypeDialog.resetValues}"
                        process="@this"
                        oncomplete="PF('dialogAddDocStrucType').show()"
                        update="dialogAddDocStrucTypeDialog">
                <f:actionListener binding="#{DataEditorForm.addDocStrucTypeDialog.preparePreselectedViews()}"/>
            </p:menuitem>
            <p:menuitem value="#{DataEditorForm.consecutivePagesSelected() ? msgs.addElement.concat(' ').concat(msgs.assignMedia) : msgs['dataEditor.removeElement.noConsecutivePagesSelected']}"
                        rendered="#{DataEditorForm.selectedMedia.size() ge 1}"
                        icon="fa fa-plus fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly or not DataEditorForm.consecutivePagesSelected()}"
                        action="#{DataEditorForm.addDocStrucTypeDialog.prepare}"
                        process="@this"
                        oncomplete="PF('dialogAddDocStrucType').show()"
                        update="dialogAddDocStrucTypeDialog">
                <f:actionListener binding="#{DataEditorForm.addDocStrucTypeDialog.preparePreselectedViews()}"/>
            </p:menuitem>
            <p:menuitem value="#{msgs.changeDocstructType}"
                        rendered="#{DataEditorForm.structurePanel.selectedLogicalNode.data.dataObject['class'].simpleName ne 'View'}"
                        icon="fa fa-pencil fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        actionListener="#{DataEditorForm.changeDocStrucTypeDialog.prepare}"
                        process="@this"
                        oncomplete="PF('dialogEditDocStrucType').show()"
                        update="dialogEditDocStrucTypeDialog"/>
            <p:menuitem value="#{msgs.assignToNextElement}"
                        icon="fa fa-link fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        rendered="#{DataEditorForm.structurePanel.assignableSeveralTimes}"
                        action="#{DataEditorForm.structurePanel.assign}"
                        process="@this"
                        oncomplete="$('#loadingScreen').hide()"
                        update="logicalTree
                                paginationForm:paginationWrapperPanel
                                metadataAccordion:logicalMetadataWrapperPanel
                                @(.structureElementDataList)
                                imagePreviewForm:mediaContextMenu"/>
            <p:menuitem value="#{msgs.unassign}"
                        icon="fa fa-chain-broken fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        rendered="#{DataEditorForm.structurePanel.assignedSeveralTimes}"
                        action="#{DataEditorForm.structurePanel.unassign}"
                        process="@this"
                        oncomplete="$('#loadingScreen').hide()"
                        update="logicalTree
                                paginationForm:paginationWrapperPanel
                                metadataAccordion:logicalMetadataWrapperPanel
                                @(.structureElementDataList)
                                imagePreviewForm:mediaContextMenu"/>
            <p:menuitem value="#{msgs.uploadMedia}"
                        action="#{DataEditorForm.uploadFileDialog.prepare}"
                        rendered="#{SecurityAccessController.hasAuthorityToUploadMedia() and DataEditorForm.isFolderConfigurationComplete()}"
                        icon="fa fa-download fa-sm"
                        styleClass="plain"
                        update = "uploadFileDialog"
                        disabled="#{readOnly}"
                        process="@this"/>
            <p:menuitem value="#{msgs.removeElement}"
                        rendered="#{DataEditorForm.structurePanel.selectedLogicalNode.data.dataObject['class'].simpleName ne 'View'}"
                        icon="fa fa-trash fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        onclick="$('#loadingScreen').show()"
                        oncomplete="$('#loadingScreen').hide()"
                        action="#{DataEditorForm.deleteStructure()}"
                        process="@this"
                        update="logicalTree
                                paginationForm:paginationWrapperPanel
                                metadataAccordion:logicalMetadataWrapperPanel
                                galleryWrapperPanel"/>
            <p:menuitem value="#{msgs.removeElement}"
                        rendered="#{SecurityAccessController.hasAuthorityToDeleteMedia() and DataEditorForm.structurePanel.selectedLogicalNode.data.dataObject['class'].simpleName eq 'View'}"
                        icon="fa fa-trash fa-sm"
                        styleClass="plain"
                        disabled="#{readOnly}"
                        onclick="$('#loadingScreen').show()"
                        oncomplete="$('#loadingScreen').hide()"
                        action="#{DataEditorForm.deletePhysicalDivision()}"
                        process="@this"
                        update="logicalTree
                                paginationForm:paginationWrapperPanel
                                metadataAccordion:logicalMetadataWrapperPanel
                                galleryWrapperPanel"/>
        </p:contextMenu>
    </div>
    <div class="scroll-down-area"></div>
</ui:composition>
